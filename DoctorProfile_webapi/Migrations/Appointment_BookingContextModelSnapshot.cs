//// <auto-generated />
//using System;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Metadata;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

//#nullable disable

//namespace HospitalAppointment.Migrations
//{
//    [DbContext(typeof(Appointment_BookingContext))]
//    partial class HospitalAppointmentContextModelSnapshot : ModelSnapshot
//    {
//        protected override void BuildModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "9.0.9")
//                .HasAnnotation("Relational:MaxIdentifierLength", 128);

//            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

//            modelBuilder.Entity("Doctor", b =>
//                {
//                    b.Property<int>("DoctorId")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int")
//                        .HasColumnName("doctor_id");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2")
//                        .HasColumnName("created_at");

//                    b.Property<int>("ExperienceYears")
//                        .HasColumnType("int")
//                        .HasColumnName("experience_years");

//                    b.Property<int>("Gender")
//                        .HasColumnType("int")
//                        .HasColumnName("gender");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasMaxLength(100)
//                        .HasColumnType("nvarchar(100)")
//                        .HasColumnName("name");

//                    b.Property<string>("Phone")
//                        .IsRequired()
//                        .HasMaxLength(10)
//                        .HasColumnType("nvarchar(10)")
//                        .HasColumnName("phone");

//                    b.Property<string>("Qualification")
//                        .IsRequired()
//                        .HasMaxLength(200)
//                        .HasColumnType("nvarchar(200)")
//                        .HasColumnName("qualification");

//                    b.Property<string>("Specialization")
//                        .IsRequired()
//                        .HasMaxLength(100)
//                        .HasColumnType("nvarchar(100)")
//                        .HasColumnName("specialization");

//                    b.Property<int>("UserId")
//                        .HasColumnType("int")
//                        .HasColumnName("user_id");

//                    b.HasKey("DoctorId");

//                    b.ToTable("Doctors");
//                });

            modelBuilder.Entity("HospitalAppointment.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");
//            modelBuilder.Entity("HospitalAppointment.Models.Availability", b =>
//                {
//                    b.Property<int>("AvailabilityId")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));
//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AvailabilityId"));

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("AppointmentTime")
                        .HasColumnType("time");

                    b.Property<int>("AvailabilityId")
                        .HasColumnType("int");

                    b.Property<string>("Concern")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");
//                    b.Property<DateTime>("Date")
//                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");
//                    b.Property<int>("DoctorId")
//                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");
//                    b.Property<TimeSpan>("EndTime")
//                        .HasColumnType("time");

//                    b.Property<int>("LocationId")
//                        .HasColumnType("int");

//                    b.Property<TimeSpan>("StartTime")
//                        .HasColumnType("time");

//                    b.Property<int>("Status")
//                        .HasColumnType("int");

//                    b.HasKey("AvailabilityId");

//                    b.ToTable("Availability");
//                });

//            modelBuilder.Entity("HospitalAppointment.Models.MedicalHist", b =>
//                {
//                    b.Property<int>("HistoryId")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

//                    b.Property<DateTime>("DateOfVisit")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Diagnosis")
//                        .IsRequired()
//                        .HasMaxLength(255)
//                        .HasColumnType("nvarchar(255)");

//                    b.Property<int>("DoctorId")
//                        .HasColumnType("int");

//                    b.Property<int>("PatientId")
//                        .HasColumnType("int");

//                    b.Property<string>("Treatment")
//                        .IsRequired()
//                        .HasMaxLength(255)
//                        .HasColumnType("nvarchar(255)");

//                    b.HasKey("HistoryId");

//                    b.HasIndex("DoctorId");

//                    b.HasIndex("PatientId");

//                    b.ToTable("MedicalHist");
//                });

//            modelBuilder.Entity("HospitalAppointment.Models.Patient", b =>
//                {
//                    b.Property<int>("PatientId")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

//                    b.Property<string>("Address")
//                        .IsRequired()
//                        .HasMaxLength(255)
//                        .HasColumnType("nvarchar(255)");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<DateTime>("Dob")
//                        .HasColumnType("datetime2");

//                    b.Property<int>("Gender")
//                        .HasColumnType("int");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasMaxLength(100)
//                        .HasColumnType("nvarchar(100)");

//                    b.Property<string>("Phone")
//                        .IsRequired()
//                        .HasMaxLength(10)
//                        .HasColumnType("nvarchar(10)");

//                    b.Property<int>("UserId")
//                        .HasColumnType("int");

//                    b.HasKey("PatientId");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");
//                    b.HasIndex("UserId");

                    b.Property<int>("Status")
                        .HasColumnType("int");
//                    b.ToTable("Patient");
//                });

                    b.HasKey("AppointmentId");

                    b.ToTable("Appointment");
                });
//            modelBuilder.Entity("HospitalAppointment.Models.Rating", b =>
//                {
//                    b.Property<int>("RatingId")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

            modelBuilder.Entity("HospitalAppointment.Models.Availability", b =>
                {
                    b.Property<int>("AvailabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");
//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AvailabilityId"));
//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");
//                    b.Property<int>("DoctorId")
//                        .HasColumnType("int");

//                    b.Property<int>("PatientId")
//                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");
//                    b.Property<int>("Value")
//                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");
//                    b.HasKey("RatingId");

                    b.HasKey("AvailabilityId");
//                    b.HasIndex("DoctorId");

//                    b.ToTable("Ratings");
//                });

                    b.HasIndex("LocationId");

                    b.ToTable("Availability");
                });

            modelBuilder.Entity("HospitalAppointment.Models.FAQ", b =>
                {
                    b.Property<int>("FaqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaqId"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FaqId");
//            modelBuilder.Entity("HospitalAppointment.Models.User", b =>
//                {
//                    b.Property<int>("UserId")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

                    b.ToTable("FAQs");
                });
//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

            modelBuilder.Entity("HospitalAppointment.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");
//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));
//                    b.Property<string>("Email")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("Password")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("HospitalAppointment.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");
//                    b.Property<string>("Phone")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");
//                    b.Property<int>("Role")
//                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PatientId");

                    b.HasIndex("UserId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HospitalAppointment.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");
//                    b.HasKey("UserId");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");
//                    b.ToTable("User");
//                });

                    b.Property<int>("Value")
                        .HasColumnType("int");
//            modelBuilder.Entity("Location", b =>
//                {
//                    b.Property<int>("LocationId")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Rating");
                });
//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

//                    b.Property<string>("Address")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("City")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("ClinicName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int>("DoctorId")
//                        .HasColumnType("int");

//                    b.Property<string>("Pincode")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("State")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("LocationId");

//                    b.HasIndex("DoctorId");

//                    b.ToTable("Location");
//                });

//            modelBuilder.Entity("HospitalAppointment.Models.MedicalHist", b =>
//                {
//                    b.HasOne("Doctor", "Doctor")
//                        .WithMany()
//                        .HasForeignKey("DoctorId")
//                        .OnDelete(DeleteBehavior.Restrict)
//                        .IsRequired();

//                    b.HasOne("HospitalAppointment.Models.Patient", "Patient")
//                        .WithMany()
//                        .HasForeignKey("PatientId")
//                        .OnDelete(DeleteBehavior.Restrict)
//                        .IsRequired();

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HospitalAppointment.Models.Availability", b =>
                {
                    b.HasOne("Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("HospitalAppointment.Models.Patient", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
//                    b.Navigation("Doctor");

//                    b.Navigation("Patient");
//                });

            modelBuilder.Entity("HospitalAppointment.Models.Rating", b =>
                {
                    b.HasOne("Doctor", "Doctor")
                        .WithMany("Rating")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
//            modelBuilder.Entity("HospitalAppointment.Models.Patient", b =>
//                {
//                    b.HasOne("HospitalAppointment.Models.User", "User")
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("User");
//                });

//            modelBuilder.Entity("HospitalAppointment.Models.Rating", b =>
//                {
//                    b.HasOne("Doctor", "Doctor")
//                        .WithMany()
//                        .HasForeignKey("DoctorId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Doctor");
//                });

//            modelBuilder.Entity("Location", b =>
//                {
//                    b.HasOne("Doctor", null)
//                        .WithMany("Locations")
//                        .HasForeignKey("DoctorId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

            modelBuilder.Entity("Doctor", b =>
                {
                    b.Navigation("Locations");

                    b.Navigation("Rating");
                });
#pragma warning restore 612, 618
        }
    }
}
//            modelBuilder.Entity("Doctor", b =>
//                {
//                    b.Navigation("Locations");
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}

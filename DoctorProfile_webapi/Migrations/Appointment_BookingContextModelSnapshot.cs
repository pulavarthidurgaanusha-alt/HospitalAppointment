// <auto-generated />
using System;
using HospitalAppointment.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Appointment_Booking.Migrations
{
    [DbContext(typeof(Appointment_BookingContext))]
    partial class Appointment_BookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Appointment_Booking.Models.Appointment", b =>
            {
                b.Property<int>("AppointmentId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                b.Property<DateTime>("AppointmentDate")
                    .HasColumnType("datetime2");

                b.Property<TimeSpan>("AppointmentTime")
                    .HasColumnType("time");

                b.Property<int>("AvailabilityId")
                    .HasColumnType("int");

                b.Property<string>("Concern")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<int>("DoctorId")
                    .HasColumnType("int");

                b.Property<int>("PatientId")
                    .HasColumnType("int");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.HasKey("AppointmentId");

                b.HasIndex("AvailabilityId");

                b.ToTable("Appointment");
            });

            modelBuilder.Entity("Appointment_Booking.Models.Availability", b =>
            {
                b.Property<int>("AvailabilityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AvailabilityId"));

                b.Property<DateTime>("Date")
                    .HasColumnType("datetime2");

                b.Property<int>("DoctorId")
                    .HasColumnType("int");

                b.Property<TimeSpan>("EndTime")
                    .HasColumnType("time");

                b.Property<int>("LocationId")
                    .HasColumnType("int");

                b.Property<TimeSpan>("StartTime")
                    .HasColumnType("time");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.HasKey("AvailabilityId");

                b.ToTable("Availabilities");
            });

            modelBuilder.Entity("Appointment_Booking.Models.Doctor", b =>
            {
                b.Property<int>("DoctorId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<int>("ExperienceYears")
                    .HasColumnType("int");

                b.Property<int>("Gender")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<string>("Phone")
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnType("nvarchar(10)");

                b.Property<string>("Qualification")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<string>("Specialization")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.HasKey("DoctorId");

                b.ToTable("Doctors");
            });

            modelBuilder.Entity("Appointment_Booking.Models.Location", b =>
            {
                b.Property<int>("LocationId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                b.Property<string>("Address")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)");

                b.Property<string>("City")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)");

                b.Property<string>("ClinicName")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)");

                b.Property<int>("DoctorId")
                    .HasColumnType("int");

                b.Property<string>("Pincode")
                    .IsRequired()
                    .HasMaxLength(6)
                    .HasColumnType("nvarchar(6)");

                b.Property<string>("State")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)");

                b.HasKey("LocationId");

                b.ToTable("Locations");
            });

            modelBuilder.Entity("Appointment_Booking.Models.Notification", b =>
            {
                b.Property<int>("NotificationId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Message")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)");

                b.Property<bool>("Read")
                    .HasColumnType("bit");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.HasKey("NotificationId");

                b.ToTable("Notification");
            });

            modelBuilder.Entity("Appointment_Booking.Models.Patient", b =>
            {
                b.Property<int>("PatientId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                b.Property<string>("Address")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("Dob")
                    .HasColumnType("datetime2");

                b.Property<int>("Gender")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<string>("Phone")
                    .IsRequired()
                    .HasMaxLength(10)
                    .HasColumnType("nvarchar(10)");

                b.Property<int>("UserId")
                    .HasColumnType("int");

                b.HasKey("PatientId");

                b.HasIndex("UserId");

                b.ToTable("Patients");
            });

            modelBuilder.Entity("Appointment_Booking.Models.User", b =>
            {
                b.Property<int>("UserId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<string>("Image")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnType("nvarchar(255)");

                b.Property<int>("Role")
                    .HasColumnType("int");

                b.HasKey("UserId");

                b.ToTable("Users");
            });

            modelBuilder.Entity("Appointment_Booking.Models.Appointment", b =>
            {
                b.HasOne("Appointment_Booking.Models.Availability", "Availability")
                    .WithMany()
                    .HasForeignKey("AvailabilityId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Availability");
            });

            modelBuilder.Entity("Appointment_Booking.Models.Patient", b =>
            {
                b.HasOne("Appointment_Booking.Models.User", "User")
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("User");
            });
#pragma warning restore 612, 618
        }
    }
}

